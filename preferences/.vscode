#!/usr/bin/env bash

###############################################################################
# Visual Studio Code
###############################################################################
# shellcheck disable=SC1090
source "${HOME}/Projects/dotfiles/bin/echos.sh"

settingsSource=$HOME/Projects/dotfiles-min/applications/vscode/settings.json
keybindingsSource=$HOME/Projects/dotfiles-min/applications/vscode/keybindings.json
vsiconsSource=$HOME/Projects/dotfiles-min/applications/vscode/vsicons.settings.json
projectsSource=$HOME/Projects/dotfiles-min/applications/vscode/projects.json
snippetsSource=$HOME/Projects/dotfiles-min/applications/vscode/snippets/

vsCodeUser=$HOME/Library/Application\ Support/Code/User

settingsTarget=$vsCodeUser/settings.json
keybindingsTarget=$vsCodeUser/keybindings.json
vsiconsTarget=$vsCodeUser/vsicons.settings.json
projectsTarget=$vsCodeUser/projects.json
snippetsTarget=$vsCodeUser/snippets/

# running "VS Code: Making the required directories if they don't exist"
# [[ ! -d "$vsCodeUser" ]] && mkdir -p "$installedPackages"
# ok

running "VS Code: Linking config files\\n"

running "VS Code: Linking settings.json"
if [[ -f "$settingsSource" ]] ; then
    [[ -f "$settingsTarget" ]] && rm -rf "$settingsTarget"
    ln -s "$settingsSource" "$settingsTarget"
else
    ln -s "$settingsSource" "$settingsTarget"
fi
ok


running "VS Code: Linking keybindings.json"
if [[ -f "$keybindingsSource" ]] ; then
    [[ -f "$keybindingsTarget" ]] && rm -rf "$keybindingsTarget"
    ln -s "$keybindingsSource" "$keybindingsTarget"
else
    ln -s "$keybindingsSource" "$keybindingsTarget"
fi
ok

running "VS Code: Linking icons"
if [[ -f "$vsiconsSource" ]] ; then
    [[ -f "$vsiconsTarget" ]] && rm -rf "$vsiconsTarget"
    ln -s "$vsiconsSource" "$vsiconsTarget"
else
    ln -s "$vsiconsSource" "$vsiconsTarget"
fi
ok

running "VS Code: Linking snippets\\n"
if [[ -d "$snippetsSource" ]] ; then
    running "VS Code: Remove snippets directory if already exists"
    [[ -d "$snippetsTarget" ]] && rm -rf "$snippetsTarget"
    ok
    ln -s "$snippetsSource" "$snippetsTarget"
else
    ln -s "$snippetsSource" "$snippetsTarget"
fi
ok

running "VS Code: Installing extensions"
xargs -L1 code --install-extension < .vscode_extensions
# code --install-extension abusaidm.html-snippets
# code --install-extension Alan.stylus
# code --install-extension AlanWalk.markdown-toc
# code --install-extension alefragnani.project-manager
# code --install-extension andrejunges.Handlebars
# code --install-extension annsk.alignment
# code --install-extension bierner.markdown-preview-github-styles
# code --install-extension casian.plsql
# code --install-extension DavidAnson.vscode-markdownlint
# code --install-extension dbaeumer.vscode-eslint
# code --install-extension eamodio.gitlens
# code --install-extension eg2.vscode-npm-script
# code --install-extension jakebathman.mysql-syntax
# code --install-extension michelemelluso.code-beautifier
# code --install-extension mikestead.dotenv
# code --install-extension mohsen1.prettify-json
# code --install-extension mrmlnc.vscode-pugbeautify
# code --install-extension ms-python.python
# code --install-extension ms-vscode.Go
# code --install-extension octref.vetur
# code --install-extension PeterJausovec.vscode-docker
# code --install-extension PKief.material-icon-theme
# code --install-extension redhat.vscode-yaml
# code --install-extension timonwong.shellcheck
# code --install-extension tonsky.theme-alabaster
# code --install-extension vscoss.vscode-ansible
# code --install-extension wholroyd.jinja
# code --install-extension Zignd.html-css-class-completion
ok

running "VS Code: Installing jshint Node.js app (without it the extension won't work)"
npm i -g jshint
ok

running "VS Code: Linking porjects list from the Projects extension\\n"
if [[ -f "$projectsSource" ]] ; then
    [[ -f "$projectsTarget" ]] && rm -rf "$projectsTarget"
    ln -s "$projectsSource" "$projectsTarget"
else
    ln -s "$projectsSource" "$projectsTarget"
fi
ok
